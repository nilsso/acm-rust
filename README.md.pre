Arithmetic Congruence Monoid
============================

[![Latest version](https://img.shields.io/crates/v/acm.svg)](https://crates.io/crates/acm)
[![Documentation](https://docs.rs/acm/badge.svg)](https://docs.rs/acm)

Implements [arithmetic congruence monoids][math-acm] (ACM) in Rust.

[math-acm]: http://faculty.fairfield.edu/pbaginski/Papers/SubmittedACMSurvey%20RevisedReferee%2001.20.2013.pdf

In a nutshell, an ACM is an arithmetic progression which possesses a
multiplicative structure, and specifically is the monoid:
$$
M_{a,b}=\{a+bm:m\in\mathbb{Z}_{\ge 0}\}\cup\{1\}=\{1,a,a+b,a+2b,\ldots\}
$$

With $a=1$ and $b=4$ we get a Hilbert monoid:
$$
M_{1,4}=\{1+4m:m\in\mathbb{Z}_{\ge 0}\}\cup\{1\}=\{1,5,9,13,17,\ldots\}
$$

Over an ACM, we can factor integers into elements of the ACM. This is similar to
simple prime factorization except that each factor must be an element of the
ACM. We call elements which cannot be expressed as the product of smaller ACM
elements *atoms*.

Finally, the purpose of this library is to study the atomic density of different
ACMs, that is, the distance between atoms. In certain ACMs the atomic density is
provably constant throughout, but in others it is unknown; not dissimilar to the
density, or lack thereof, of prime integers in the set of all integers.

This project started as [a C++ port][acm-cpp] of [acm-sage], but my interest in
Rust led me to rewrite the project.

[acm-cpp]: https://github.com/nilsso/acm-cpp
[acm-sage]: https://github.com/coneill-math/acm-sage

## CLI

Provided is an example CLI program `acm-cli` with subcommands to test the main ACM module and the
divisors/factorize submodules.
```
> cargo r --example acm-cli factor 225
(3,2),(5,2)

> cargo r --example acm-cli acm 3 6 factor 225
[15,15],[3, 75]
```

For usages use the <kbd>-h</kbd> flag.
```
> cargo r --example acm-cli -h
USAGE:
    acm-cli <SUBCOMMAND>

FLAGS:
    -h, --help       Prints help information
    -V, --version    Prints version information

SUBCOMMANDS:
    acm          ArithmeticCongruenceMonoid subcommand
    divisors     Integer divisors subcommand
    factorize    Integer factorization subcommand
    help         Prints this message or the help of the given subcommand(s)

> cargo r --example acm-cli acm factor -h
ACM atom factorizations of an integer

USAGE:
    acm-cli acm <a> <b> factor <n>

FLAGS:
    -h, --help       Prints help information
    -V, --version    Prints version information

ARGS:
    <n>    Integer to factor
```

## Documentation
Build all documentation locall and open in your browser:
```
RUSTDOCFLAGS="--html-in-header katex-header.html" cargo doc --no-deps --open
```

## Tests

To run all tests, including documentation tests:
```
cargo t
```
